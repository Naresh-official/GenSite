export const DEFAULT_REACT_PROMPT =
	'<genSiteArtifact id="project-import" title="Project Files"><genSiteAction type="file" filePath="eslint.config.js">import js from \'@eslint/js\';\nimport globals from \'globals\';\nimport reactHooks from \'eslint-plugin-react-hooks\';\nimport reactRefresh from \'eslint-plugin-react-refresh\';\nimport tseslint from \'typescript-eslint\';\n\nexport default tseslint.config(\n  { ignores: [\'dist\'] },\n  {\n    extends: [js.configs.recommended, ...tseslint.configs.recommended],\n    files: [\'**/*.{ts,tsx}\'],\n    languageOptions: {\n      ecmaVersion: 2020,\n      globals: globals.browser,\n    },\n    plugins: {\n      \'react-hooks\': reactHooks,\n      \'react-refresh\': reactRefresh,\n    },\n    rules: {\n      ...reactHooks.configs.recommended.rules,\n      \'react-refresh/only-export-components\': [\n        \'warn\',\n        { allowConstantExport: true },\n      ],\n    },\n  }\n);\n</genSiteAction><genSiteAction type="file" filePath="index.html"><!doctype html>\n<html lang="en">\n  <head>\n    <meta charset="UTF-8" />\n    <link rel="icon" type="image/svg+xml" href="/vite.svg" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <title>Vite + React + TS</title>\n  </head>\n  <body>\n    <div id="root"></div>\n    <script type="module" src="/src/main.tsx"></script>\n  </body>\n</html>\n</genSiteAction><genSiteAction type="file" filePath="package.json">{\n  "name": "vite-react-typescript-starter",\n  "private": true,\n  "version": "0.0.0",\n  "type": "module",\n  "scripts": {\n    "dev": "vite",\n    "build": "vite build",\n    "lint": "eslint .",\n    "preview": "vite preview"\n  },\n  "dependencies": {\n    "lucide-react": "^0.344.0",\n    "react": "^18.3.1",\n    "react-dom": "^18.3.1"\n  },\n  "devDependencies": {\n    "@eslint/js": "^9.9.1",\n    "@types/react": "^18.3.5",\n    "@types/react-dom": "^18.3.0",\n    "@vitejs/plugin-react": "^4.3.1",\n    "autoprefixer": "^10.4.18",\n    "eslint": "^9.9.1",\n    "eslint-plugin-react-hooks": "^5.1.0-rc.0",\n    "eslint-plugin-react-refresh": "^0.4.11",\n    "globals": "^15.9.0",\n    "postcss": "^8.4.35",\n    "tailwindcss": "^3.4.1",\n    "typescript": "^5.5.3",\n    "typescript-eslint": "^8.3.0",\n    "vite": "^5.4.2"\n  }\n}\n</genSiteAction><genSiteAction type="file" filePath="postcss.config.js">export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n};\n</genSiteAction><genSiteAction type="file" filePath="tailwind.config.js">/** @type {import(\'tailwindcss\').Config} */\nexport default {\n  content: [\'./index.html\', \'./src/**/*.{js,ts,jsx,tsx}\'],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n};\n</genSiteAction><genSiteAction type="file" filePath="tsconfig.app.json">{\n  "compilerOptions": {\n    "target": "ES2020",\n    "useDefineForClassFields": true,\n    "lib": ["ES2020", "DOM", "DOM.Iterable"],\n    "module": "ESNext",\n    "skipLibCheck": true,\n\n    /* Bundler mode */\n    "moduleResolution": "bundler",\n    "allowImportingTsExtensions": true,\n    "isolatedModules": true,\n    "moduleDetection": "force",\n    "noEmit": true,\n    "jsx": "react-jsx",\n\n    /* Linting */\n    "strict": true,\n    "noUnusedLocals": true,\n    "noUnusedParameters": true,\n    "noFallthroughCasesInSwitch": true\n  },\n  "include": ["src"]\n}\n</genSiteAction><genSiteAction type="file" filePath="tsconfig.json">{\n  "files": [],\n  "references": [\n    { "path": "./tsconfig.app.json" },\n    { "path": "./tsconfig.node.json" }\n  ]\n}\n</genSiteAction><genSiteAction type="file" filePath="tsconfig.node.json">{\n  "compilerOptions": {\n    "target": "ES2022",\n    "lib": ["ES2023"],\n    "module": "ESNext",\n    "skipLibCheck": true,\n\n    /* Bundler mode */\n    "moduleResolution": "bundler",\n    "allowImportingTsExtensions": true,\n    "isolatedModules": true,\n    "moduleDetection": "force",\n    "noEmit": true,\n\n    /* Linting */\n    "strict": true,\n    "noUnusedLocals": true,\n    "noUnusedParameters": true,\n    "noFallthroughCasesInSwitch": true\n  },\n  "include": ["vite.config.ts"]\n}\n</genSiteAction><genSiteAction type="file" filePath="vite.config.ts">import { defineConfig } from \'vite\';\nimport react from \'@vitejs/plugin-react\';\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [react()],\n  optimizeDeps: {\n    exclude: [\'lucide-react\'],\n  },\n});\n</genSiteAction><genSiteAction type="file" filePath="src/App.tsx">import React from \'react\';\n\nfunction App() {\n  return (\n    <div className="min-h-screen bg-gray-100 flex items-center justify-center">\n      <p>Start prompting (or editing) to see magic happen :)</p>\n    </div>\n  );\n}\n\nexport default App;\n</genSiteAction><genSiteAction type="file" filePath="src/index.css">@tailwind base;\n@tailwind components;\n@tailwind utilities;\n</genSiteAction><genSiteAction type="file" filePath="src/main.tsx">import { StrictMode } from \'react\';\nimport { createRoot } from \'react-dom/client\';\nimport App from \'./App.tsx\';\nimport \'./index.css\';\n\ncreateRoot(document.getElementById(\'root\')!).render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n</genSiteAction><genSiteAction type="file" filePath="src/vite-env.d.ts">/// <reference types="vite/client" />\n</genSiteAction></genSiteArtifact>';

export const DEFAULT_NEXTJS_PROMPT =
	'<genSiteArtifact id="project-import" title="Project Files"><genSiteAction type="file" filePath="package.json">{\n  "name": "nextjs-app-router-starter",\n  "private": true,\n  "version": "0.0.0",\n  "scripts": {\n    "dev": "next dev",\n    "build": "next build",\n    "start": "next start",\n    "lint": "next lint"\n  },\n  "dependencies": {\n    "next": "13.5.3",\n    "react": "18.3.1",\n    "react-dom": "18.3.1"\n  },\n  "devDependencies": {\n    "eslint": "9.9.1",\n    "eslint-config-next": "13.5.3",\n    "tailwindcss": "^3.4.1",\n    "postcss": "^8.4.35",\n    "autoprefixer": "^10.4.18"\n  }\n}</genSiteAction><genSiteAction type="file" filePath="next.config.js">/** @type {import(\'next\').NextConfig} */\nconst nextConfig = {\n  reactStrictMode: true,\n  experimental: {\n    appDir: true\n  }\n};\n\nmodule.exports = nextConfig;</genSiteAction><genSiteAction type="file" filePath="app/layout.tsx">import \'./globals.css\';\nimport { ReactNode } from \'react\';\n\nexport const metadata = {\n  title: \'Next.js App Router Starter\',\n  description: \'A starter project using Next.js App Router and Tailwind CSS.\',\n};\n\nexport default function RootLayout({ children }: { children: ReactNode }) {\n  return (\n    <html lang="en">\n      <body className="min-h-screen bg-gray-100">{children}</body>\n    </html>\n  );\n}</genSiteAction><genSiteAction type="file" filePath="app/page.tsx">export default function Home() {\n  return (\n    <main className="flex flex-col items-center justify-center min-h-screen">\n      <h1 className="text-3xl font-bold">Welcome to Next.js App Router Starter</h1>\n      <p>Get started by editing <code>app/page.tsx</code>.</p>\n    </main>\n  );\n}</genSiteAction><genSiteAction type="file" filePath="styles/globals.css">@tailwind base;\n@tailwind components;\n@tailwind utilities;</genSiteAction><genSiteAction type="file" filePath="tailwind.config.js">/** @type {import(\'tailwindcss\').Config} */\nmodule.exports = {\n  content: [\'./app/**/*.{ts,tsx}\', \'./components/**/*.{ts,tsx}\'],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n};</genSiteAction></genSiteArtifact>';

export const DEFAULT_HTML_PROMPT =
	'<genSiteArtifact id="project-import" title="Project Files"><genSiteAction type="file" filePath="index.html"><!doctype html>\n<html lang="en">\n  <head>\n    <meta charset="UTF-8" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <title>HTML Starter Project</title>\n    <link rel="stylesheet" href="styles.css" />\n  </head>\n  <body>\n    <header>\n      <h1>Welcome to HTML Starter Project</h1>\n    </header>\n    <main>\n      <p>Begin coding your static website here.</p>\n    </main>\n    <footer>\n      <p>&copy; 2024 Your Name</p>\n    </footer>\n    <script src="scripts.js"></script>\n  </body>\n</html></genSiteAction><genSiteAction type="file" filePath="styles.css">body {\n  font-family: Arial, sans-serif;\n  margin: 0;\n  padding: 0;\n  background-color: #f4f4f4;\n}\n\nheader {\n  background-color: #333;\n  color: #fff;\n  text-align: center;\n  padding: 1rem 0;\n}\n\nmain {\n  padding: 2rem;\n  text-align: center;\n}</genSiteAction><genSiteAction type="file" filePath="scripts.js">console.log(\'HTML Starter Project Loaded\');</genSiteAction></genSiteArtifact>';

export const DEFAULT_NODEJS_PROMPT =
	'<genSiteArtifact id="project-import" title="Project Files"><genSiteAction type="file" filePath="package.json">{\n  "name": "nodejs-starter-project",\n  "version": "1.0.0",\n  "description": "Node.js backend starter project",\n  "main": "index.js",\n  "scripts": {\n    "start": "node index.js",\n    "dev": "nodemon index.js"\n  },\n  "dependencies": {\n    "express": "^4.18.2"\n  },\n  "devDependencies": {\n    "nodemon": "^3.0.1"\n  }\n}</genSiteAction><genSiteAction type="file" filePath="index.js">const express = require(\'express\');\nconst app = express();\nconst PORT = process.env.PORT || 3000;\n\napp.use(express.json());\n\napp.get(\'/\', (req, res) => {\n  res.send(\'Welcome to Node.js Starter Project\');\n});\n\napp.listen(PORT, () => {\n  console.log(`Server running on http://localhost:${PORT}`);\n});</genSiteAction><genSiteAction type="file" filePath=".env">PORT=3000</genSiteAction><genSiteAction type="file" filePath=".gitignore">node_modules\n.env</genSiteAction></genSiteArtifact>';

export const DEFAULT_BASE_PROMPT =
	"For all designs I ask you to make, have them be beautiful, not cookie cutter. Make webpages that are fully featured and worthy for production.\n\nBy default, this template supports JSX syntax with Tailwind CSS classes, React hooks, and Lucide React for icons. Do not install other packages for UI themes, icons, etc unless absolutely necessary or I request them.\n\nUse icons from lucide-react for logos.\n\nUse stock photos from unsplash where appropriate, only valid URLs you know exist. Do not download the images, only link to them in image tags.";

export const getInitialPrompt = (techStack: string) => {
	switch (techStack) {
		case "html":
			return `Here is an artifact that contains all files of the project visible to you.\nConsider the contents of ALL files in the project.\n\n${DEFAULT_HTML_PROMPT}\n\nHere is a list of files that exist on the file system but are not being shown to you:\n\n  - .gitignore\n  - package-lock.json\n`;
		case "nodejs":
			return `Here is an artifact that contains all files of the project visible to you.\nConsider the contents of ALL files in the project.\n\n${DEFAULT_NODEJS_PROMPT}\n\nHere is a list of files that exist on the file system but are not being shown to you:\n\n  - .gitignore\n  - package-lock.json\n`;
		case "nextjs":
			return `Here is an artifact that contains all files of the project visible to you.\nConsider the contents of ALL files in the project.\n\n${DEFAULT_NEXTJS_PROMPT}\n\nHere is a list of files that exist on the file system but are not being shown to you:\n\n  - .gitignore\n  - package-lock.json\n`;
		case "react":
			return `Here is an artifact that contains all files of the project visible to you.\nConsider the contents of ALL files in the project.\n\n${DEFAULT_REACT_PROMPT}\n\nHere is a list of files that exist on the file system but are not being shown to you:\n\n  - .gitignore\n  - package-lock.json\n`;
	}
};

export const getFilePrompts = (techStack: string) => {
	switch (techStack) {
		case "html":
			return DEFAULT_HTML_PROMPT;
		case "nodejs":
			return DEFAULT_NODEJS_PROMPT;
		case "nextjs":
			return DEFAULT_NEXTJS_PROMPT;
		case "react":
			return DEFAULT_REACT_PROMPT;
	}
};
